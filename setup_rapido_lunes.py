"""
Setup r√°pido para preparar el sistema antes del lunes

Ejecuta prec√°lculos esenciales para asegurar que el sistema
funcione r√°pidamente en la apertura del mercado.
"""

import os
import subprocess
import time
from datetime import datetime, timedelta

print("üöÄ PREPARACI√ìN R√ÅPIDA PARA EL LUNES")
print("=" * 60)
print("Este script preparar√° el sistema para funcionar √≥ptimamente")
print("en la apertura del mercado del lunes.")
print("=" * 60)

# Paso 1: Verificar que tenemos las credenciales
if not os.getenv('POLYGON_API_KEY'):
    print("‚ùå ERROR: No se encuentra POLYGON_API_KEY")
    print("Por favor configura tu API key en el archivo .env")
    exit(1)

print("\n‚úÖ API Key configurada correctamente")

# Paso 2: Instalar dependencias si es necesario
print("\nüì¶ Verificando dependencias...")
try:
    import polygon
    import pandas
    import streamlit
    print("‚úÖ Todas las dependencias instaladas")
except ImportError as e:
    print(f"‚ö†Ô∏è Instalando dependencias faltantes...")
    subprocess.run([f"{os.sys.executable}", "-m", "pip", "install", "-r", "requirements.txt"])

# Paso 3: Precalcular strikes para los pr√≥ximos d√≠as
print("\nüîÑ Iniciando prec√°lculo de strikes √≥ptimos...")
print("Esto tomar√° aproximadamente 5-10 minutos")
print("Por favor espera...\n")

try:
    # Calcular solo los √∫ltimos 30 d√≠as y pr√≥ximos 5 d√≠as
    from precalcular_strikes import ejecutar_precalculo
    
    print("Procesando √∫ltimos 30 d√≠as + pr√≥ximos 5 d√≠as...")
    ejecutar_precalculo(dias_atras=30, dias_adelante=5)
    
    print("\n‚úÖ Prec√°lculo completado exitosamente")
    
except Exception as e:
    print(f"‚ùå Error durante el prec√°lculo: {e}")
    print("El sistema funcionar√° pero m√°s lento")

# Paso 4: Verificar que todo est√° listo
print("\nüîç VERIFICACI√ìN FINAL:")
print("-" * 40)

# Verificar archivos necesarios
archivos_necesarios = [
    'app_v90b.py',
    'historial_operaciones.json',
    'resultados_historicos.json',
    'strikes_precalculados.db'
]

todos_presentes = True
for archivo in archivos_necesarios:
    if os.path.exists(archivo):
        print(f"‚úÖ {archivo}")
    else:
        print(f"‚ùå {archivo} - FALTANTE")
        todos_presentes = False

# Verificar base de datos
if os.path.exists('strikes_precalculados.db'):
    from usar_strikes_precalculados import verificar_base_datos
    print("\nüìä Estado de la base de datos:")
    verificar_base_datos()

# Instrucciones finales
print("\n" + "="*60)
print("üéØ INSTRUCCIONES PARA EL LUNES:")
print("="*60)
print("\n1. Para iniciar el sistema:")
print("   streamlit run app_v90b.py")
print("\n2. El sistema ahora:")
print("   - Busca autom√°ticamente la opci√≥n con MAYOR % de ganancia")
print("   - Respeta los rangos de prima configurados") 
print("   - Muestra las mejores 3 alternativas")
print("   - Los detalles hist√≥ricos se ven al hacer click")
print("\n3. Si necesitas actualizar datos hist√≥ricos:")
print("   - Usa el bot√≥n en la interfaz para cargar 4 meses")
print("\n4. La base de datos de strikes acelera las b√∫squedas")
print("   - Se actualiza autom√°ticamente cada vez que usas el sistema")

if todos_presentes:
    print("\n‚úÖ ¬°SISTEMA LISTO PARA EL LUNES!")
else:
    print("\n‚ö†Ô∏è Hay archivos faltantes, revisa los mensajes arriba")

print("\nüöÄ ¬°√âxito en el trading del lunes! üìà")